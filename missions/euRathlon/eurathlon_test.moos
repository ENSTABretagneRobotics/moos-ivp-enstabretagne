ServerHost = localhost
ServerPort = 9000
Community  = AUV

//Serial port configuration
GPS_SERIAL_PORT = /dev/gps
SONAR_SERIAL_PORT = /dev/sonar
ECHOSOUNDER_SERIAL_PORT = /dev/echosounder
KELLER_SERIAL_PORT = /dev/keller
XSENSINS_SERIAL_PORT = /dev/xsens
//RAZORIMU_SERIAL_PORT = /dev/ttyUSB10

ProcessConfig = ANTLER
{
  MSBetweenLaunches = 200

  Run = MOOSDB          @ NewConsole = false

  // ************** UTILITIES ****************
  Run = uMS               @ NewConsole = false
  Run = uMACView          @ NewConsole = false
  Run = uProcessWatch     @ NewConsole = false
  Run = uSensorsViewer    @ NewConsole = false
  Run = uNavScreen        @ NewConsole = false

  // ************** LOGS *********************
  Run = pLogger           @ NewConsole = false
  //Run = pShare          @ NewConsole = false 

  // ************** ENGINE CONTROL ***********
  Run = iSaucisse         @ NewConsole = false
  Run = pMixThrusters     @ NewConsole = false

  // ************** SENSORS *********
  Run = iXSensINS         @ NewConsole = false
  Run = iGPS              @ NewConsole = false
  Run = iKeller           @ NewConsole = false
  Run = iSonar            @ NewConsole = false
  Run = iCamera           @ NewConsole = false ~iCamera1
  Run = iCamera           @ NewConsole = false ~iCamera2
  //Run = iSounder          @ NewConsole = false
  //Run = iRazorIMU         @ NewConsole = false
}

// INTERFACES

ProcessConfig = iCamera_Bottom
{
  AppTick   = 10
  CommsTick = 10

  VARIABLE_IMAGE_NAME   = CAMERA_BOTTOM
  IDENTIFIANT_CV_CAMERA = 1
  DISPLAY_IMAGE         = false
  INVERT_IMAGE          = false

  LARGEUR_IMAGE_CAMERA  = 360
  HAUTEUR_IMAGE_CAMERA  = 288
}

ProcessConfig = iCamera_Side
{
  AppTick   = 10
  CommsTick = 10

  VARIABLE_IMAGE_NAME   = CAMERA_SIDE
  IDENTIFIANT_CV_CAMERA = 0
  DISPLAY_IMAGE         = false
  INVERT_IMAGE          = false

  LARGEUR_IMAGE_CAMERA  = 360
  HAUTEUR_IMAGE_CAMERA  = 288
}

ProcessConfig = iGPS
{
  AppTick   = 4
  CommsTick = 4

  UART_BAUD_RATE = 4800
}

ProcessConfig = iKeller
{
  AppTick   = 4
  CommsTick = 4

  MAX_RETRIES = 10
}

ProcessConfig = iModem
{
  AppTick   = 4
  CommsTick = 4
  max_appcast_events = 8

  BAUD_RATE_CONF = 57600
  BAUD_RATE_COMM = 9600

  MODEM_RANGING_TIMEOUT_US = 3000

  ROBOT_NAME = AUV1

  POWERED_AT_START = TRUE
}

ProcessConfig = iRazorIMU
{
  AppTick   = 4
  CommsTick = 4

  MODE = ACC_MAG_GYR_CALIBRATED
  // MODE values:
  //    YAW_PITCH_ROLL
  //    ACC_MAG_GYR_RAW
  //    ACC_MAG_GYR_CALIBRATED
}

ProcessConfig = iSaucisse
{
  AppTick   = 4
  CommsTick = 4

  DEVICE_NAME = /dev/ttyACM0
  # Linux:
  #     /dev/ttyACM0
  # Windows: 
  #     \\\\.\\USBSER000
  #     or
  #     \\\\.\\COM6
  # Mac OS X:
  #     /dev/cu.usbmodem00034567

  // Force relays settings at startup
  RESET_ON_STARTUP = true
  // If requested, force relays to 'on' position at startup
  RESET_ALL_ON = true

  // Emit a signal when computer's too hot
  ALERT_MAX_TEMPERATURE = 999 // Â°C
  // WARNING: must be used when Pololu will be multithreaded!
}

ProcessConfig = iSonar_Micron
{

}

ProcessConfig = iSonar_Miniking
{

}

ProcessConfig = iSounder
{
  AppTick   = 4
  CommsTick = 4
}

ProcessConfig = iXSensINS
{
  AppTick        = 25
  CommsTick      = 25

  UART_BAUD_RATE = 115200
}

// PROCESSES

ProcessConfig = pEstimSpeed
{
  AppTick   = 4
  CommsTick = 4

  // The coeff matrix maps forces (Newton) to inputs ([-1,1], adimensional)
  // In this application, we will compute the inverse of this matrix,
  // so that from inputs we get forces, and can apply Newton's law of motion
  COEFF_MATRIX = 1,-1,0,1,1,0,0,0,1

  // The damping matrix maps square of speeds as inputs, and return a force.
  // In an underwater environment, the damping is not linear with respect
  // to speed.
  // Once we have the damping forces and the input forces, we can apply Newton's laws of motion
  DAMPING_MATRIX = 0.4,0,0,0,0.4,0,0,0,0.4

  // Initial speed. In principle, we should aim for a null speed at
  // startup
  V0 = 0,0,0

  // Name to receive the yaw
  YAW_REGISTRATION_NAME = IMU_YAW

  // Mass of the robot
  MASS = 20

  U1_SUBSCRIPTION_NAME = SET_THRUSTER_LEFT
  U2_SUBSCRIPTION_NAME = SET_THRUSTER_RIGHT
  U3_SUBSCRIPTION_NAME = SET_THRUSTER_VERTICAL
  RESET_SUBSCRIPTION_NAME = RESET_ESTIM
  GPS_E_SUBSCRIPTION_NAME = GPS_E
  GPS_N_SUBSCRIPTION_NAME = GPS_N
  KELLER_DEPTH_SUBSCRIPTION_NAME = DEPTH

  // Names of the publications
  POS_DEAD_RECKONING_PUBLICATION_NAME = POS_DEAD_RECKONING
  SPEED_LOCAL_DEAD_RECKONING_PUBLICATION_NAME = SPEED_LOCAL_DEAD_RECKONING
  SPEED_GLOBAL_DEAD_RECKONING_PUBLICATION_NAME = SPEED_GLOBAL_DEAD_RECKONING
}

ProcessConfig = pMixThrusters
{
  AppTick   = 10
  CommsTick = 10

  FX_SUBSCRIPTION_NAME=DESIRED_FX
  RZ_SUBSCRIPTION_NAME=DESIRED_RZ
  FZ_SUBSCRIPTION_NAME=DESIRED_FZ

  U1_PUBLICATION_NAME=SET_THRUSTER_LEFT
  U2_PUBLICATION_NAME=SET_THRUSTER_RIGHT
  U3_PUBLICATION_NAME=SET_THRUSTER_VERTICAL

  COEFF_MATRIX=0.9,-0.9,0,1,1,0,0,0,1
}

ProcessConfig = pSimplePID_Depth
{

}

ProcessConfig = pSimplePID_Heading
{

}

ProcessConfig = pTrustGPS
{
  AppTick   = 4
  CommsTick = 4

  ALTITUDE_THRESHOLD = -0.5
  BUFFER_SIZE = 10

  GPS_SIG_SUBSCRIPTION_NAME = GPS_SIG
  GPS_FIX_SUBSCRIPTION_NAME = GPS_FIX
  KELLER_DEPTH_SUBSCRIPTION_NAME = KELLER_DEPTH

  GPS_TRUST_PUBLICATION_NAME = GPS_TRUST
}

// UTILITIES

ProcessConfig = uSensorsViewer
{
  AppTick   = 25
  CommsTick = 25
}

